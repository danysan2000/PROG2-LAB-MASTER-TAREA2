!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Diff	d,deletedFile	/deleted files/
!_TAG_KIND_DESCRIPTION!Diff	h,hunk	/hunks/
!_TAG_KIND_DESCRIPTION!Diff	m,modifiedFile	/modified files/
!_TAG_KIND_DESCRIPTION!Diff	n,newFile	/newly created files/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C++	0.0	/current.age/
!_TAG_PARSER_VERSION!Diff	0.0	/current.age/
!_TAG_PARSER_VERSION!Make	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/run/media/alberto.daniel.sanchez/disco_fing_3/FING/PROG-2/LAB/TAREA-2/REENTREGA/tarea2/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	//
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
$(ARCHIVO_CLAVES)	Makefile	/^$(ARCHIVO_CLAVES):$/;"	t
$(EJECUTABLE)	Makefile	/^$(EJECUTABLE):$(ODIR)\/$(PRINCIPAL).o $(OS)$/;"	t
$(LIB)	Makefile	/^$(LIB):	$(ODIR)\/utils.o $(ODIR)\/$(PRINCIPAL).o$/;"	t
$(ODIR)/$(PRINCIPAL).o	Makefile	/^$(ODIR)\/$(PRINCIPAL).o:$(PRINCIPAL).$(EXT)$/;"	t
$(ODIR)/%.o	Makefile	/^$(ODIR)\/%.o: $(CPPDIR)\/%.$(EXT)  $(HDIR)\/%.h$/;"	t
$(SALIDADIR)%.diff	Makefile	/^$(SALIDADIR)%.diff: $(OUTDIR)%.out $(SALIDADIR)%.sal$/;"	t
$(SALIDADIR)/%.sal	Makefile	/^$(SALIDADIR)\/%.sal:$(INDIR)\/%.in$/;"	t
$(SALS)	Makefile	/^$(SALS):$(EJECUTABLE)$/;"	t
$(tS)	Makefile	/^$(tS):$(EJECUTABLE)$/;"	t
$(ttS)	Makefile	/^$(ttS):$(EJECUTABLE)$/;"	t
%.diff	Makefile	/^%.diff:Makefile$/;"	t
ABBPERSONAS_H	include/abbPersonas.h	/^#define ABBPERSONAS_H$/;"	d
ARCHIVO_CLAVES	Makefile	/^ARCHIVO_CLAVES=claves.txt$/;"	m
ARCHIVO_ENTREGA	Makefile	/^ARCHIVO_ENTREGA=EntregaTarea2.tar.gz$/;"	m
CASOS	Makefile	/^CASOS = fecha5-combinado \\$/;"	m
CC	Makefile	/^CC = g++ # gcc -x c $/;"	m
CODIGO_PERSONA_PERRO	src/lseAdopciones.cpp	/^#define CODIGO_PERSONA_PERRO(/;"	d	file:
COMANDO_CLAVES	Makefile	/^COMANDO_CLAVES=shasum$/;"	m
CPPDIR	Makefile	/^CPPDIR  = src$/;"	m
CPPS	Makefile	/^CPPS = $(MODULOS:%=$(CPPDIR)\/%.$(EXT))$/;"	m
CPPS_ENTREGA	Makefile	/^CPPS_ENTREGA = $(ENTREGAR:%=%.$(EXT))$/;"	m
DIFFS	Makefile	/^DIFFS=$(CASOS:%=$(SALIDADIR)\/%.diff)$/;"	m
EJECUTABLE	Makefile	/^EJECUTABLE=principal$/;"	m
ENTREGAR	Makefile	/^ENTREGAR = fecha perro persona lseAdopciones ldePerros abbPersonas$/;"	m
EXT	Makefile	/^EXT = cpp$/;"	m
HDIR	Makefile	/^HDIR    = include$/;"	m
HS	Makefile	/^HS   = $(MODULOS:%=$(HDIR)\/%.h)$/;"	m
INDIR	Makefile	/^INDIR     = test$/;"	m
INS	Makefile	/^INS=$(CASOS:%=$(INDIR)\/%.in)$/;"	m
LIB	Makefile	/^LIB = tarea.a$/;"	m
LSEADOPCIONES_H	include/lseAdopciones.h	/^#define LSEADOPCIONES_H$/;"	d
MAX_APELLIDO_PERSONA	include/persona.h	/^const int MAX_APELLIDO_PERSONA = 100;$/;"	v	typeref:typename:const int
MAX_DESCRIPCION	include/perro.h	/^const int MAX_DESCRIPCION = 100;$/;"	v	typeref:typename:const int
MAX_LINEA	principal.cpp	/^#define MAX_LINEA /;"	d	file:
MAX_NOMBRE	include/perro.h	/^const int MAX_NOMBRE = 50;$/;"	v	typeref:typename:const int
MAX_NOMBRE_PERSONA	include/persona.h	/^const int MAX_NOMBRE_PERSONA = 100;$/;"	v	typeref:typename:const int
MAX_PALABRA	principal.cpp	/^#define MAX_PALABRA /;"	d	file:
MAX_PERROS_PERSONA	include/persona.h	/^const int MAX_PERROS_PERSONA = 5;$/;"	v	typeref:typename:const int
MODULOS	Makefile	/^MODULOS = $(ENTREGAR) utils$/;"	m
MaxCIP	src/ORG.abbPersonas.cpp	/^static TABBPersonas  MaxCIP(TABBPersonas  t)$/;"	f	typeref:typename:TABBPersonas	file:
MaxCIP	src/abbPersonas.cpp	/^static TABBPersonas  MaxCIP(TABBPersonas  t)$/;"	f	typeref:typename:TABBPersonas	file:
ODIR	Makefile	/^ODIR    = obj$/;"	m
OS	Makefile	/^OS   = $(MODULOS:%=$(ODIR)\/%.o)$/;"	m
OUTDIR	Makefile	/^OUTDIR    = test$/;"	m
OUTS	Makefile	/^OUTS=$(CASOS:%=$(OUTDIR)\/%.out)$/;"	m
PERRO_H	include/perro.h	/^#define PERRO_H$/;"	d
PRINCIPAL	Makefile	/^PRINCIPAL=principal$/;"	m
SALIDADIR	Makefile	/^SALIDADIR = test\/salidas$/;"	m
SALS	Makefile	/^SALS=$(CASOS:%=$(SALIDADIR)\/%.sal)$/;"	m
TABBPersonas	include/abbPersonas.h	/^typedef struct rep_abbPersonas *TABBPersonas;$/;"	t	typeref:struct:rep_abbPersonas *
TFecha	include/fecha.h	/^typedef struct rep_fecha *TFecha;$/;"	t	typeref:struct:rep_fecha *
TLDEPERROS_H	include/ldePerros.h	/^#define TLDEPERROS_H$/;"	d
TLDEPerros	include/ldePerros.h	/^typedef struct rep_tldeperros *TLDEPerros;$/;"	t	typeref:struct:rep_tldeperros *
TLDEPerrosNodo	src/ldePerros.cpp	/^typedef struct rep_nodo_perros *TLDEPerrosNodo;$/;"	t	typeref:struct:rep_nodo_perros *	file:
TLSEAdopciones	include/lseAdopciones.h	/^typedef struct rep_lseadopciones *TLSEAdopciones;$/;"	t	typeref:struct:rep_lseadopciones *
TPERSONA_H	include/persona.h	/^#define TPERSONA_H$/;"	d
TPerro	include/perro.h	/^typedef struct rep_perro *TPerro;$/;"	t	typeref:struct:rep_perro *
TPersona	include/persona.h	/^typedef struct rep_persona *TPersona;$/;"	t	typeref:struct:rep_persona *
_FECHA_H_	include/fecha.h	/^#define _FECHA_H_$/;"	d
_UTILS_H	include/utils.h	/^ #define _UTILS_H$/;"	d
__anon5d0980a50108	src/persona.cpp	/^    struct {$/;"	s	struct:rep_persona	file:
actualizarEdadTPerro	src/perro.cpp	/^void actualizarEdadTPerro(TPerro &perro, nat nuevaEdad)$/;"	f	typeref:typename:void
actualizarVitalidadTPerro	src/perro.cpp	/^void actualizarVitalidadTPerro(TPerro &perro, nat nuevaVitalidad)$/;"	f	typeref:typename:void
agregarPerroTPersona	src/persona.cpp	/^void agregarPerroTPersona(TPersona &persona, TPerro perro)$/;"	f	typeref:typename:void
all	Makefile	/^all: principal$/;"	t
alturaTABBP	src/ORG.abbPersonas.cpp	/^static nat alturaTABBP( TABBPersonas t )$/;"	f	typeref:typename:nat	file:
alturaTABBP	src/abbPersonas.cpp	/^static nat alturaTABBP( TABBPersonas t )$/;"	f	typeref:typename:nat	file:
alturaTABBPersonas	src/ORG.abbPersonas.cpp	/^nat alturaTABBPersonas(TABBPersonas abbPersonas)$/;"	f	typeref:typename:nat
alturaTABBPersonas	src/abbPersonas.cpp	/^nat alturaTABBPersonas(TABBPersonas abbPersonas)$/;"	f	typeref:typename:nat
anio	src/fecha.cpp	/^    nat     anio, mes, dia;$/;"	m	struct:rep_fecha	typeref:typename:nat	file:
anioTFecha	src/fecha.cpp	/^nat anioTFecha( TFecha fecha)$/;"	f	typeref:typename:nat
ant	src/ldePerros.cpp	/^	struct rep_nodo_perros *ant;  \/\/ nodo anterior.$/;"	m	struct:rep_nodo_perros	typeref:struct:rep_nodo_perros *	file:
apellido	src/persona.cpp	/^    char apellido[MAX_APELLIDO_PERSONA];$/;"	m	struct:rep_persona	typeref:typename:char[]	file:
apellidoTPersona	src/persona.cpp	/^char* apellidoTPersona(TPersona persona)$/;"	f	typeref:typename:char *
aumentarTFecha	src/fecha.cpp	/^void aumentarTFecha(TFecha &fecha, nat dias) $/;"	f	typeref:typename:void
axAdop	src/lseAdopciones.cpp	/^	#define axAdop /;"	d	file:
buscarTABBPersonas	src/ORG.abbPersonas.cpp	/^static TABBPersonas buscarTABBPersonas(int key , TABBPersonas t)$/;"	f	typeref:typename:TABBPersonas	file:
buscarTABBPersonas	src/abbPersonas.cpp	/^static TABBPersonas buscarTABBPersonas(int key , TABBPersonas t)$/;"	f	typeref:typename:TABBPersonas	file:
cantTABBP	src/ORG.abbPersonas.cpp	/^static int cantTABBP( TABBPersonas t )$/;"	f	typeref:typename:int	file:
cantTABBP	src/abbPersonas.cpp	/^static int cantTABBP( TABBPersonas t )$/;"	f	typeref:typename:int	file:
cant_nodos	src/ldePerros.cpp	/^	nat cant_nodos;        			\/\/ cantindad de nodos en rep_Nodo_perros$/;"	m	struct:rep_tldeperros	typeref:typename:nat	file:
cantidadPerrosTPersona	src/persona.cpp	/^int cantidadPerrosTPersona(TPersona persona)$/;"	f	typeref:typename:int
cantidadTABBPersonas	src/ORG.abbPersonas.cpp	/^int cantidadTABBPersonas(TABBPersonas abbPersonas)$/;"	f	typeref:typename:int
cantidadTABBPersonas	src/abbPersonas.cpp	/^int cantidadTABBPersonas(TABBPersonas abbPersonas)$/;"	f	typeref:typename:int
cantidadTLDEPerros	src/ldePerros.cpp	/^nat cantidadTLDEPerros(TLDEPerros ldePerros)$/;"	f	typeref:typename:nat
check-syntax	Makefile	/^check-syntax:$/;"	t
ci	src/persona.cpp	/^    int ci;$/;"	m	struct:rep_persona	typeref:typename:int	file:
ciTPersona	src/persona.cpp	/^int ciTPersona(TPersona persona)$/;"	f	typeref:typename:int
claves	Makefile	/^claves:$(ARCHIVO_CLAVES)$/;"	t
clean	Makefile	/^clean:clean_test clean_bin$/;"	t
clean_bin	Makefile	/^clean_bin:$/;"	t
clean_test	Makefile	/^clean_test:$/;"	t
cmd_es	principal.cpp	/^#define cmd_es(/;"	d	file:
compararTFechas	src/fecha.cpp	/^int compararTFechas(TFecha fecha1, TFecha fecha2) $/;"	f	typeref:typename:int
copiarTFecha	src/fecha.cpp	/^TFecha copiarTFecha(TFecha fecha) $/;"	f	typeref:typename:TFecha
copiarTPerro	src/perro.cpp	/^TPerro copiarTPerro(TPerro perro)$/;"	f	typeref:typename:TPerro
copiarTPersona	src/persona.cpp	/^TPersona copiarTPersona(TPersona persona)$/;"	f	typeref:typename:TPersona
crearTABBPersonasVacio	src/ORG.abbPersonas.cpp	/^TABBPersonas crearTABBPersonasVacio()$/;"	f	typeref:typename:TABBPersonas
crearTABBPersonasVacio	src/abbPersonas.cpp	/^TABBPersonas crearTABBPersonasVacio()$/;"	f	typeref:typename:TABBPersonas
crearTFecha	src/fecha.cpp	/^TFecha crearTFecha(nat dia, nat mes, nat anio)$/;"	f	typeref:typename:TFecha
crearTLDEPerrosVacia	src/ldePerros.cpp	/^TLDEPerros crearTLDEPerrosVacia()$/;"	f	typeref:typename:TLDEPerros
crearTLSEAdopcionesVacia	src/lseAdopciones.cpp	/^TLSEAdopciones crearTLSEAdopcionesVacia()$/;"	f	typeref:typename:TLSEAdopciones
crearTPerro	src/perro.cpp	/^TPerro crearTPerro( int id, const char nombre[MAX_NOMBRE], nat edad, nat vitalidad, const char d/;"	f	typeref:typename:TPerro
crearTPersona	src/persona.cpp	/^TPersona crearTPersona(int ci, const char nombre[MAX_NOMBRE_PERSONA], const char apellido[MAX_AP/;"	f	typeref:typename:TPersona
descr	src/perro.cpp	/^    char    descr[MAX_DESCRIPCION];$/;"	m	struct:rep_perro	typeref:typename:char[]	file:
descripcionTPerro	src/perro.cpp	/^char* descripcionTPerro(TPerro perro)$/;"	f	typeref:typename:char *
dia	src/fecha.cpp	/^    nat     anio, mes, dia;$/;"	m	struct:rep_fecha	typeref:typename:nat	file:
diaTFecha	src/fecha.cpp	/^nat diaTFecha( TFecha fecha )$/;"	f	typeref:typename:nat
diasMes	src/fecha.cpp	/^static nat diasMes(nat mes, nat anio)$/;"	f	typeref:typename:nat	file:
edad	src/perro.cpp	/^    nat     edad;$/;"	m	struct:rep_perro	typeref:typename:nat	file:
edadTPerro	src/perro.cpp	/^nat edadTPerro(TPerro perro)$/;"	f	typeref:typename:nat
elimTABBP	src/ORG.abbPersonas.cpp	/^void elimTABBP(int clave,  TABBPersonas & t , int status)$/;"	f	typeref:typename:void
elimTABBP	src/abbPersonas.cpp	/^void elimTABBP(int clave,  TABBPersonas & t , int status)$/;"	f	typeref:typename:void
enesTABBP_enOrden	src/ORG.abbPersonas.cpp	/^static void enesTABBP_enOrden (TABBPersonas t , int n,int & cnt , TABBPersonas &rslt )$/;"	f	typeref:typename:void	file:
enesTABBP_enOrden	src/abbPersonas.cpp	/^static void enesTABBP_enOrden (TABBPersonas t , int n,int & cnt , TABBPersonas &rslt )$/;"	f	typeref:typename:void	file:
entrega	Makefile	/^entrega:claves$/;"	t
esVaciaTLSEAdopciones	src/lseAdopciones.cpp	/^bool esVaciaTLSEAdopciones(TLSEAdopciones lseAdopciones)$/;"	f	typeref:typename:bool
existeAdopcionTLSEAdopciones	src/lseAdopciones.cpp	/^bool existeAdopcionTLSEAdopciones(TLSEAdopciones lseAdopciones, int ciPersona, int idPerro)$/;"	f	typeref:typename:bool
existePerroTLDEPerros	src/ldePerros.cpp	/^bool existePerroTLDEPerros(TLDEPerros ldePerros, int id)$/;"	f	typeref:typename:bool
existeTPersonaTABBPersonas	src/ORG.abbPersonas.cpp	/^bool existeTPersonaTABBPersonas(TABBPersonas abbPersonas, int ciPersona)$/;"	f	typeref:typename:bool
existeTPersonaTABBPersonas	src/abbPersonas.cpp	/^bool existeTPersonaTABBPersonas(TABBPersonas abbPersonas, int ciPersona)$/;"	f	typeref:typename:bool
fechaAdop	src/lseAdopciones.cpp	/^	TFecha			fechaAdop;		\/\/ Fecha de Adoption$/;"	m	struct:rep_lseadopciones	typeref:typename:TFecha	file:
fechaIngresoTPerro	src/perro.cpp	/^TFecha fechaIngresoTPerro(TPerro perro)$/;"	f	typeref:typename:TFecha
fechaNacimiento	src/persona.cpp	/^    TFecha fechaNacimiento;$/;"	m	struct:rep_persona	typeref:typename:TFecha	file:
fechaNacimientoTPersona	src/persona.cpp	/^TFecha fechaNacimientoTPersona(TPersona persona)$/;"	f	typeref:typename:TFecha
fecha_ing	src/perro.cpp	/^    TFecha  fecha_ing;$/;"	m	struct:rep_perro	typeref:typename:TFecha	file:
filtradoPorFechaDeNacimientoTABBPersonas	src/ORG.abbPersonas.cpp	/^TABBPersonas filtradoPorFechaDeNacimientoTABBPersonas(TABBPersonas abbPersonas, TFecha fecha, in/;"	f	typeref:typename:TABBPersonas
filtradoPorFechaDeNacimientoTABBPersonas	src/abbPersonas.cpp	/^TABBPersonas filtradoPorFechaDeNacimientoTABBPersonas(TABBPersonas abbPersonas, TFecha fecha, in/;"	f	typeref:typename:TABBPersonas
filtrado_TABBP	src/ORG.abbPersonas.cpp	/^static void filtrado_TABBP( TABBPersonas t, TABBPersonas &tnew,  TFecha fecha, int crit)$/;"	f	typeref:typename:void	file:
filtrado_TABBP	src/abbPersonas.cpp	/^static void filtrado_TABBP( TABBPersonas t, TABBPersonas &tnew,  TFecha fecha, int crit)$/;"	f	typeref:typename:void	file:
id	src/perro.cpp	/^    int     id;$/;"	m	struct:rep_perro	typeref:typename:int	file:
idTPerro	src/perro.cpp	/^int idTPerro(TPerro perro)$/;"	f	typeref:typename:int
id_vital	src/perro.cpp	/^    nat     id_vital;$/;"	m	struct:rep_perro	typeref:typename:nat	file:
imprimirInvertidoTLDEPerros	src/ldePerros.cpp	/^void imprimirInvertidoTLDEPerros(TLDEPerros ldePerros)$/;"	f	typeref:typename:void
imprimirTABBPersonas	src/ORG.abbPersonas.cpp	/^void imprimirTABBPersonas(TABBPersonas abbPersonas)$/;"	f	typeref:typename:void
imprimirTABBPersonas	src/abbPersonas.cpp	/^void imprimirTABBPersonas(TABBPersonas abbPersonas)$/;"	f	typeref:typename:void
imprimirTABB_PenOrden	src/ORG.abbPersonas.cpp	/^static void imprimirTABB_PenOrden (TABBPersonas t)$/;"	f	typeref:typename:void	file:
imprimirTABB_PenOrden	src/abbPersonas.cpp	/^static void imprimirTABB_PenOrden (TABBPersonas t)$/;"	f	typeref:typename:void	file:
imprimirTFecha	src/fecha.cpp	/^void imprimirTFecha(TFecha fecha) $/;"	f	typeref:typename:void
imprimirTLDEPerros	src/ldePerros.cpp	/^void imprimirTLDEPerros(TLDEPerros ldePerros)$/;"	f	typeref:typename:void
imprimirTLSEAdopciones	src/lseAdopciones.cpp	/^void imprimirTLSEAdopciones(TLSEAdopciones lseAdopciones)$/;"	f	typeref:typename:void
imprimirTPerro	src/perro.cpp	/^void imprimirTPerro(TPerro perro)$/;"	f	typeref:typename:void
imprimirTPersona	src/persona.cpp	/^void imprimirTPersona(TPersona persona)$/;"	f	typeref:typename:void
insAbbPersona	src/ORG.abbPersonas.cpp	/^static void insAbbPersona(int key, TPersona dato, TABBPersonas & t)$/;"	f	typeref:typename:void	file:
insAbbPersona	src/abbPersonas.cpp	/^static void insAbbPersona(int key, TPersona dato, TABBPersonas & t)$/;"	f	typeref:typename:void	file:
insertarEnArbolDesdeArreglo	principal.cpp	/^void insertarEnArbolDesdeArreglo(TABBPersonas &abbPersonas, TPersona *arreglo, int inicio, int f/;"	f	typeref:typename:void
insertarTLDEPerros	src/ldePerros.cpp	/^void insertarTLDEPerros(TLDEPerros &ldePerros, TPerro perro)$/;"	f	typeref:typename:void
insertarTLSEAdopciones	src/lseAdopciones.cpp	/^void insertarTLSEAdopciones(TLSEAdopciones &lseAdopciones, TFecha fecha, TPersona persona, TPerr/;"	f	typeref:typename:void
insertarTPersonaTABBPersonas	src/ORG.abbPersonas.cpp	/^void insertarTPersonaTABBPersonas(TABBPersonas &abbPersonas, TPersona persona)$/;"	f	typeref:typename:void
insertarTPersonaTABBPersonas	src/abbPersonas.cpp	/^void insertarTPersonaTABBPersonas(TABBPersonas &abbPersonas, TPersona persona)$/;"	f	typeref:typename:void
key	src/ORG.abbPersonas.cpp	/^	int  key;		\/\/ KEY:ci de Persona(para no estar accediendo a persona cada vez que se usa)$/;"	m	struct:rep_abbPersonas	typeref:typename:int	file:
key	src/abbPersonas.cpp	/^	int  key;		\/\/ KEY:ci de Persona(para no estar accediendo a persona cada vez que se usa)$/;"	m	struct:rep_abbPersonas	typeref:typename:int	file:
leerChar	src/utils.cpp	/^ char leerChar() {$/;"	f	typeref:typename:char
leerChars	src/utils.cpp	/^ void leerChars(char* cs) { scanf("%s", cs); }$/;"	f	typeref:typename:void
leerDouble	src/utils.cpp	/^ double leerDouble() {$/;"	f	typeref:typename:double
leerFecha	principal.cpp	/^void leerFecha(TFecha &fecha) {$/;"	f	typeref:typename:void
leerInt	src/utils.cpp	/^ int leerInt(){$/;"	f	typeref:typename:int
leerNat	src/utils.cpp	/^ nat leerNat() {$/;"	f	typeref:typename:nat
leerRestoLinea	src/utils.cpp	/^ void leerRestoLinea(char* cs) { scanf("%[^\\n]", cs); } /;"	f	typeref:typename:void
left	src/ORG.abbPersonas.cpp	/^	TABBPersonas  left, right; \/\/ control sobre grafo-tree.$/;"	m	struct:rep_abbPersonas	typeref:typename:TABBPersonas	file:
left	src/abbPersonas.cpp	/^	TABBPersonas  left, right; \/\/ control sobre grafo-tree.$/;"	m	struct:rep_abbPersonas	typeref:typename:TABBPersonas	file:
liberarTABBPersonas	src/ORG.abbPersonas.cpp	/^void liberarTABBPersonas(TABBPersonas &abbPersonas)$/;"	f	typeref:typename:void
liberarTABBPersonas	src/abbPersonas.cpp	/^void liberarTABBPersonas(TABBPersonas &abbPersonas)$/;"	f	typeref:typename:void
liberarTABB_postOrden	src/ORG.abbPersonas.cpp	/^static void liberarTABB_postOrden (TABBPersonas &t)$/;"	f	typeref:typename:void	file:
liberarTABB_postOrden	src/abbPersonas.cpp	/^static void liberarTABB_postOrden (TABBPersonas &t)$/;"	f	typeref:typename:void	file:
liberarTFecha	src/fecha.cpp	/^void liberarTFecha(TFecha &fecha) $/;"	f	typeref:typename:void
liberarTLDEPerros	src/ldePerros.cpp	/^void liberarTLDEPerros(TLDEPerros &ldePerros)$/;"	f	typeref:typename:void
liberarTLSEAdopciones	src/lseAdopciones.cpp	/^void liberarTLSEAdopciones(TLSEAdopciones &lseAdopciones)$/;"	f	typeref:typename:void
liberarTPerro	src/perro.cpp	/^void liberarTPerro(TPerro &perro)$/;"	f	typeref:typename:void
liberarTPersona	src/persona.cpp	/^void liberarTPersona(TPersona &persona)$/;"	f	typeref:typename:void
main	principal.cpp	/^int main() {$/;"	f	typeref:typename:int
main_actualizarEdadPerro	principal.cpp	/^void main_actualizarEdadPerro(TPerro &perro) {$/;"	f	typeref:typename:void
main_actualizarVitalidadPerro	principal.cpp	/^void main_actualizarVitalidadPerro(TPerro &perro) {$/;"	f	typeref:typename:void
main_agregarPerroPersona	principal.cpp	/^void main_agregarPerroPersona(TPersona persona, TPerro &perro){$/;"	f	typeref:typename:void
main_alturaABBPersonas	principal.cpp	/^void main_alturaABBPersonas(TABBPersonas abbPersonas){$/;"	f	typeref:typename:void
main_alturaABBPersonasTiempo	principal.cpp	/^void main_alturaABBPersonasTiempo(){$/;"	f	typeref:typename:void
main_aumentarDias	principal.cpp	/^void main_aumentarDias(TFecha &fecha) {$/;"	f	typeref:typename:void
main_cantidadABBPersonas	principal.cpp	/^void main_cantidadABBPersonas(TABBPersonas abbPersonas){$/;"	f	typeref:typename:void
main_cantidadLDEPerros	principal.cpp	/^void main_cantidadLDEPerros(TLDEPerros ldePerros){$/;"	f	typeref:typename:void
main_cantidadPerrosPersona	principal.cpp	/^void main_cantidadPerrosPersona(TPersona persona){$/;"	f	typeref:typename:void
main_compararFechas	principal.cpp	/^void main_compararFechas() {$/;"	f	typeref:typename:void
main_copiarFecha	principal.cpp	/^void main_copiarFecha(TFecha fecha) {$/;"	f	typeref:typename:void
main_copiarPerro	principal.cpp	/^void main_copiarPerro(TPerro perro) {$/;"	f	typeref:typename:void
main_copiarPersona	principal.cpp	/^void main_copiarPersona(TPersona persona){$/;"	f	typeref:typename:void
main_crearABBPersonasVacio	principal.cpp	/^void main_crearABBPersonasVacio(TABBPersonas &abbPersonas){$/;"	f	typeref:typename:void
main_crearFecha	principal.cpp	/^void main_crearFecha(TFecha &fecha) {$/;"	f	typeref:typename:void
main_crearLDEPerrosVacia	principal.cpp	/^void main_crearLDEPerrosVacia(TLDEPerros &ldePerros){$/;"	f	typeref:typename:void
main_crearLSEAdopcionesVacia	principal.cpp	/^void main_crearLSEAdopcionesVacia(TLSEAdopciones &listaAdopciones){$/;"	f	typeref:typename:void
main_crearPerro	principal.cpp	/^void main_crearPerro(TPerro &perro, TFecha &fecha) {$/;"	f	typeref:typename:void
main_crearPersona	principal.cpp	/^void main_crearPersona(TPersona &persona){$/;"	f	typeref:typename:void
main_esVaciaLSEAdopciones	principal.cpp	/^void main_esVaciaLSEAdopciones(TLSEAdopciones listaAdopciones){$/;"	f	typeref:typename:void
main_existeAdopcionLSEAdopciones	principal.cpp	/^void main_existeAdopcionLSEAdopciones(TLSEAdopciones listaAdopciones){$/;"	f	typeref:typename:void
main_existePerroLDEPerros	principal.cpp	/^void main_existePerroLDEPerros(TLDEPerros ldePerros){$/;"	f	typeref:typename:void
main_existePersonaABBPersonas	principal.cpp	/^void main_existePersonaABBPersonas(TABBPersonas abbPersonas){$/;"	f	typeref:typename:void
main_filtradoPorFechaDeNacimientoABBPersonas	principal.cpp	/^void main_filtradoPorFechaDeNacimientoABBPersonas(TABBPersonas abbPersonas){$/;"	f	typeref:typename:void
main_imprimirABBPersonas	principal.cpp	/^void main_imprimirABBPersonas(TABBPersonas abbPersonas){$/;"	f	typeref:typename:void
main_imprimirCIPersona	principal.cpp	/^void main_imprimirCIPersona(TPersona persona) {$/;"	f	typeref:typename:void
main_imprimirDescripcionPerro	principal.cpp	/^void main_imprimirDescripcionPerro(TPerro perro) {$/;"	f	typeref:typename:void
main_imprimirEdadPerro	principal.cpp	/^void main_imprimirEdadPerro(TPerro perro) {$/;"	f	typeref:typename:void
main_imprimirFecha	principal.cpp	/^void main_imprimirFecha(TFecha fecha) {$/;"	f	typeref:typename:void
main_imprimirFechaIngresoPerro	principal.cpp	/^void main_imprimirFechaIngresoPerro(TPerro perro) {$/;"	f	typeref:typename:void
main_imprimirFechaNacimientoPersona	principal.cpp	/^void main_imprimirFechaNacimientoPersona(TPersona persona){$/;"	f	typeref:typename:void
main_imprimirIdPerro	principal.cpp	/^void main_imprimirIdPerro(TPerro perro) {$/;"	f	typeref:typename:void
main_imprimirInvertidoLDEPerros	principal.cpp	/^void main_imprimirInvertidoLDEPerros(TLDEPerros ldePerros){$/;"	f	typeref:typename:void
main_imprimirLDEPerros	principal.cpp	/^void main_imprimirLDEPerros(TLDEPerros ldePerros){$/;"	f	typeref:typename:void
main_imprimirLSEAdopciones	principal.cpp	/^void main_imprimirLSEAdopciones(TLSEAdopciones listaAdopciones){$/;"	f	typeref:typename:void
main_imprimirNombrePerro	principal.cpp	/^void main_imprimirNombrePerro(TPerro perro) {$/;"	f	typeref:typename:void
main_imprimirNombreYApellidoPersona	principal.cpp	/^void main_imprimirNombreYApellidoPersona(TPersona persona){$/;"	f	typeref:typename:void
main_imprimirPerro	principal.cpp	/^void main_imprimirPerro(TPerro perro) {$/;"	f	typeref:typename:void
main_imprimirPersona	principal.cpp	/^void main_imprimirPersona(TPersona persona) {$/;"	f	typeref:typename:void
main_imprimirVitalidadPerro	principal.cpp	/^void main_imprimirVitalidadPerro(TPerro perro) {$/;"	f	typeref:typename:void
main_insertarLDEPerros	principal.cpp	/^void main_insertarLDEPerros(TLDEPerros &ldePerros, TPerro &perro){$/;"	f	typeref:typename:void
main_insertarLSEAdopciones	principal.cpp	/^void main_insertarLSEAdopciones(TLSEAdopciones &listaAdopciones, TFecha &fecha, TPersona &person/;"	f	typeref:typename:void
main_insertarPersonaABBPersonas	principal.cpp	/^void main_insertarPersonaABBPersonas(TABBPersonas &abbPersonas, TPersona &persona){$/;"	f	typeref:typename:void
main_liberarABBPersonas	principal.cpp	/^void main_liberarABBPersonas(TABBPersonas &abbPersonas){$/;"	f	typeref:typename:void
main_liberarFecha	principal.cpp	/^void main_liberarFecha(TFecha &fecha) {$/;"	f	typeref:typename:void
main_liberarLDEPerros	principal.cpp	/^void main_liberarLDEPerros(TLDEPerros &ldePerros){$/;"	f	typeref:typename:void
main_liberarLSEAdopciones	principal.cpp	/^void main_liberarLSEAdopciones(TLSEAdopciones &listaAdopciones){$/;"	f	typeref:typename:void
main_liberarPerro	principal.cpp	/^void main_liberarPerro(TPerro &perro) {$/;"	f	typeref:typename:void
main_liberarPersona	principal.cpp	/^void main_liberarPersona(TPersona &persona) {$/;"	f	typeref:typename:void
main_maxCIPersonaABBPersonas	principal.cpp	/^void main_maxCIPersonaABBPersonas(TABBPersonas abbPersonas){$/;"	f	typeref:typename:void
main_obtenerExistePersonaABBPersonasTiempo	principal.cpp	/^void main_obtenerExistePersonaABBPersonasTiempo(){$/;"	f	typeref:typename:void
main_obtenerNesimaPersonaABBPersonas	principal.cpp	/^void main_obtenerNesimaPersonaABBPersonas(TABBPersonas abbPersonas){$/;"	f	typeref:typename:void
main_obtenerNesimaPersonaABBPersonasTiempo	principal.cpp	/^void main_obtenerNesimaPersonaABBPersonasTiempo(){$/;"	f	typeref:typename:void
main_obtenerNesimoLDEPerros	principal.cpp	/^void main_obtenerNesimoLDEPerros(TLDEPerros ldePerros){$/;"	f	typeref:typename:void
main_obtenerPersonaABBPersonas	principal.cpp	/^void main_obtenerPersonaABBPersonas(TABBPersonas abbPersonas){$/;"	f	typeref:typename:void
main_obtenerPrimeroLDEPerros	principal.cpp	/^void main_obtenerPrimeroLDEPerros(TLDEPerros ldePerros){$/;"	f	typeref:typename:void
main_obtenerUltimoLDEPerros	principal.cpp	/^void main_obtenerUltimoLDEPerros(TLDEPerros ldePerros){$/;"	f	typeref:typename:void
main_pertenecePerroPersona	principal.cpp	/^void main_pertenecePerroPersona(TPersona persona){$/;"	f	typeref:typename:void
main_removerAdopcionLSEAdopciones	principal.cpp	/^void main_removerAdopcionLSEAdopciones(TLSEAdopciones &listaAdopciones){$/;"	f	typeref:typename:void
main_removerPerroLDEPerros	principal.cpp	/^void main_removerPerroLDEPerros(TLDEPerros ldePerros){$/;"	f	typeref:typename:void
main_removerPersonaABBPersonas	principal.cpp	/^void main_removerPersonaABBPersonas(TABBPersonas &abbPersonas){$/;"	f	typeref:typename:void
max	src/ORG.abbPersonas.cpp	/^static int max(int a, int b )$/;"	f	typeref:typename:int	file:
max	src/abbPersonas.cpp	/^static int max(int a, int b )$/;"	f	typeref:typename:int	file:
maxCITPersonaTABBPersonas	src/ORG.abbPersonas.cpp	/^TPersona maxCITPersonaTABBPersonas(TABBPersonas abbPersonas)$/;"	f	typeref:typename:TPersona
maxCITPersonaTABBPersonas	src/abbPersonas.cpp	/^TPersona maxCITPersonaTABBPersonas(TABBPersonas abbPersonas)$/;"	f	typeref:typename:TPersona
maximin	src/ORG.abbPersonas.cpp	/^static TABBPersonas maximin( TABBPersonas t)$/;"	f	typeref:typename:TABBPersonas	file:
maximin	src/abbPersonas.cpp	/^static TABBPersonas maximin( TABBPersonas t)$/;"	f	typeref:typename:TABBPersonas	file:
mes	src/fecha.cpp	/^    nat     anio, mes, dia;$/;"	m	struct:rep_fecha	typeref:typename:nat	file:
mesTFecha	src/fecha.cpp	/^nat mesTFecha( TFecha fecha )$/;"	f	typeref:typename:nat
minimax	src/ORG.abbPersonas.cpp	/^static TABBPersonas minimax ( TABBPersonas t)$/;"	f	typeref:typename:TABBPersonas	file:
minimax	src/abbPersonas.cpp	/^static TABBPersonas minimax ( TABBPersonas t)$/;"	f	typeref:typename:TABBPersonas	file:
nat	include/utils.h	/^ typedef unsigned int nat;$/;"	t	typeref:typename:unsigned int
nodo_sel	src/ldePerros.cpp	/^	TLDEPerrosNodo nodo_sel;		\/\/ auxiliar nodo seleccionado.$/;"	m	struct:rep_tldeperros	typeref:typename:TLDEPerrosNodo	file:
nombre	src/perro.cpp	/^    char    nombre[MAX_NOMBRE];$/;"	m	struct:rep_perro	typeref:typename:char[]	file:
nombre	src/persona.cpp	/^    char nombre[MAX_NOMBRE_PERSONA];$/;"	m	struct:rep_persona	typeref:typename:char[]	file:
nombreTPerro	src/perro.cpp	/^char* nombreTPerro(TPerro perro)$/;"	f	typeref:typename:char *
nombreTPersona	src/persona.cpp	/^char* nombreTPersona(TPersona persona)$/;"	f	typeref:typename:char *
obtenerNesimaPersonaTABBPersonas	src/ORG.abbPersonas.cpp	/^TPersona obtenerNesimaPersonaTABBPersonas(TABBPersonas abbPersonas, int n)$/;"	f	typeref:typename:TPersona
obtenerNesimaPersonaTABBPersonas	src/abbPersonas.cpp	/^TPersona obtenerNesimaPersonaTABBPersonas(TABBPersonas abbPersonas, int n)$/;"	f	typeref:typename:TPersona
obtenerNesimoTLDEPerros	src/ldePerros.cpp	/^TPerro obtenerNesimoTLDEPerros(TLDEPerros ldePerros, int n)$/;"	f	typeref:typename:TPerro
obtenerPrimeroTLDEPerros	src/ldePerros.cpp	/^TPerro obtenerPrimeroTLDEPerros(TLDEPerros ldePerros)$/;"	f	typeref:typename:TPerro
obtenerTPersonaTABBPersonas	src/ORG.abbPersonas.cpp	/^TPersona obtenerTPersonaTABBPersonas(TABBPersonas abbPersonas, int ciPersona)$/;"	f	typeref:typename:TPersona
obtenerTPersonaTABBPersonas	src/abbPersonas.cpp	/^TPersona obtenerTPersonaTABBPersonas(TABBPersonas abbPersonas, int ciPersona)$/;"	f	typeref:typename:TPersona
obtenerUltimoTLDEPerros	src/ldePerros.cpp	/^TPerro obtenerUltimoTLDEPerros(TLDEPerros ldePerros)$/;"	f	typeref:typename:TPerro
per	src/ORG.abbPersonas.cpp	/^	TPersona per;  \/\/ Dato $/;"	m	struct:rep_abbPersonas	typeref:typename:TPersona	file:
per	src/abbPersonas.cpp	/^	TPersona per;  \/\/ Dato $/;"	m	struct:rep_abbPersonas	typeref:typename:TPersona	file:
per	src/ldePerros.cpp	/^	TPerro per;$/;"	m	struct:rep_nodo_perros	typeref:typename:TPerro	file:
per	src/lseAdopciones.cpp	/^	TPerro			per;			\/\/ Perro$/;"	m	struct:rep_lseadopciones	typeref:typename:TPerro	file:
perros	src/persona.cpp	/^        TPerro perros[MAX_PERROS_PERSONA];$/;"	m	struct:rep_persona::__anon5d0980a50108	typeref:typename:TPerro[]	file:
perrosAdoptados	src/persona.cpp	/^    } perrosAdoptados;$/;"	m	struct:rep_persona	typeref:struct:rep_persona::__anon5d0980a50108	file:
pertenecePerroTPersona	src/persona.cpp	/^bool pertenecePerroTPersona(TPersona persona, int idPerro)$/;"	f	typeref:typename:bool
prm	src/ldePerros.cpp	/^	struct rep_nodo_perros *prm; 	\/\/ Inicio.$/;"	m	struct:rep_tldeperros	typeref:struct:rep_nodo_perros *	file:
prs	src/lseAdopciones.cpp	/^	TPersona		prs;			\/\/ Persona$/;"	m	struct:rep_lseadopciones	typeref:typename:TPersona	file:
removerAdopcionTLSEAdopciones	src/lseAdopciones.cpp	/^void removerAdopcionTLSEAdopciones(TLSEAdopciones &lseAdopciones, int ciPersona, int idPerro)$/;"	f	typeref:typename:void
removerPerroTLDEPerros	src/ldePerros.cpp	/^TPerro removerPerroTLDEPerros(TLDEPerros &ldePerros, int id)$/;"	f	typeref:typename:TPerro
removerTPersonaTABBPersonas	src/ORG.abbPersonas.cpp	/^void removerTPersonaTABBPersonas(TABBPersonas &abbPersonas, int ciPersona)$/;"	f	typeref:typename:void
removerTPersonaTABBPersonas	src/abbPersonas.cpp	/^void removerTPersonaTABBPersonas(TABBPersonas &abbPersonas, int ciPersona)$/;"	f	typeref:typename:void
rep_abbPersonas	src/ORG.abbPersonas.cpp	/^struct rep_abbPersonas {$/;"	s	file:
rep_abbPersonas	src/abbPersonas.cpp	/^struct rep_abbPersonas {$/;"	s	file:
rep_fecha	src/fecha.cpp	/^struct rep_fecha $/;"	s	file:
rep_lseadopciones	src/lseAdopciones.cpp	/^struct rep_lseadopciones $/;"	s	file:
rep_nodo_perros	src/ldePerros.cpp	/^struct rep_nodo_perros {           \/\/ Nodo de la lista DE.$/;"	s	file:
rep_perro	src/perro.cpp	/^struct rep_perro$/;"	s	file:
rep_persona	src/persona.cpp	/^struct rep_persona$/;"	s	file:
rep_tldeperros	src/ldePerros.cpp	/^struct rep_tldeperros {    			\/\/ cabezal de la lista DE.$/;"	s	file:
right	src/ORG.abbPersonas.cpp	/^	TABBPersonas  left, right; \/\/ control sobre grafo-tree.$/;"	m	struct:rep_abbPersonas	typeref:typename:TABBPersonas	file:
right	src/abbPersonas.cpp	/^	TABBPersonas  left, right; \/\/ control sobre grafo-tree.$/;"	m	struct:rep_abbPersonas	typeref:typename:TABBPersonas	file:
sig	src/ldePerros.cpp	/^	struct rep_nodo_perros *sig;  \/\/ nodo siguiente.$/;"	m	struct:rep_nodo_perros	typeref:struct:rep_nodo_perros *	file:
sig	src/lseAdopciones.cpp	/^	TLSEAdopciones	sig;							\/\/ $/;"	m	struct:rep_lseadopciones	typeref:typename:TLSEAdopciones	file:
t-%	Makefile	/^t-%:$(INDIR)\/%.in $(OUTDIR)\/%.out$/;"	t
tS	Makefile	/^tS=$(CASOS:%=t-%)$/;"	m
testing	Makefile	/^testing:all $(DIFFS)$/;"	t
tope	src/persona.cpp	/^        int tope;$/;"	m	struct:rep_persona::__anon5d0980a50108	typeref:typename:int	file:
tt-%	Makefile	/^tt-%:$(INDIR)\/%.in $(OUTDIR)\/%.out$/;"	t
ttS	Makefile	/^ttS=$(CASOS:%=tt-%)$/;"	m
ult	src/ldePerros.cpp	/^	struct rep_nodo_perros *ult; 	\/\/ Final.$/;"	m	struct:rep_tldeperros	typeref:struct:rep_nodo_perros *	file:
vitalidadTPerro	src/perro.cpp	/^nat vitalidadTPerro(TPerro perro)$/;"	f	typeref:typename:nat
